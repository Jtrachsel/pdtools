[{"path":"https://jtrachsel.github.io/pdtools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://jtrachsel.github.io/pdtools/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://jtrachsel.github.io/pdtools/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://jtrachsel.github.io/pdtools/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://jtrachsel.github.io/pdtools/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://jtrachsel.github.io/pdtools/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://jtrachsel.github.io/pdtools/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://jtrachsel.github.io/pdtools/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://jtrachsel.github.io/pdtools/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://jtrachsel.github.io/pdtools/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://jtrachsel.github.io/pdtools/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://jtrachsel.github.io/pdtools/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://jtrachsel.github.io/pdtools/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://jtrachsel.github.io/pdtools/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://jtrachsel.github.io/pdtools/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://jtrachsel.github.io/pdtools/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://jtrachsel.github.io/pdtools/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://jtrachsel.github.io/pdtools/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://jtrachsel.github.io/pdtools/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://jtrachsel.github.io/pdtools/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://jtrachsel.github.io/pdtools/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://jtrachsel.github.io/pdtools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Julian Trachsel. Author, maintainer.","code":""},{"path":"https://jtrachsel.github.io/pdtools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Trachsel J (2022). pdtools: Tools interact NCBI's Pathogen Detection project. R package version 0.6.1, https://jtrachsel.github.io/pdtools/.","code":"@Manual{,   title = {pdtools: Tools to interact with NCBI's Pathogen Detection project},   author = {Julian Trachsel},   year = {2022},   note = {R package version 0.6.1},   url = {https://jtrachsel.github.io/pdtools/}, }"},{"path":[]},{"path":"https://jtrachsel.github.io/pdtools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools to interact with NCBI's Pathogen Detection project","text":"Requires R >= 4.0 Requires Biostrings, need install BiocManager","code":"BiocManager::install('Biostrings') remotes::install_github('jtrachsel/pdtools')"},{"path":"https://jtrachsel.github.io/pdtools/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Tools to interact with NCBI's Pathogen Detection project","text":"collection functions working data NCBI Pathogen Detection project https://jtrachsel.github.io/pdtools/index.html","code":""},{"path":[]},{"path":"https://jtrachsel.github.io/pdtools/index.html","id":"list-available-organisms","dir":"","previous_headings":"Examples","what":"List available organisms","title":"Tools to interact with NCBI's Pathogen Detection project","text":"","code":"library(pdtools)  list_organisms()"},{"path":"https://jtrachsel.github.io/pdtools/index.html","id":"download-the-most-recent-metadata-for-an-organism","dir":"","previous_headings":"Examples","what":"Download the most recent metadata for an organism:","title":"Tools to interact with NCBI's Pathogen Detection project","text":"","code":"system('mkdir data') download_most_recent_complete('Campylobacter', folder_prefix = './data/')"},{"path":"https://jtrachsel.github.io/pdtools/index.html","id":"join-downloads-metadata-and-snp-clusters","dir":"","previous_headings":"Examples","what":"Join downloads: metadata and SNP clusters","title":"Tools to interact with NCBI's Pathogen Detection project","text":"","code":"# The names of these files will change based on the most recent complete data # you will have to adjust these meta <- readr::read_tsv('./data/PDG000000003.1540.amr.metadata.tsv') %>%    dplyr::left_join(readr::read_tsv('./data/PDG000000003.1540.cluster_list.tsv'))"},{"path":"https://jtrachsel.github.io/pdtools/index.html","id":"extract-agricultural-host-species-from-several-metadata-fields","dir":"","previous_headings":"Examples","what":"Extract agricultural host species from several metadata fields:","title":"Tools to interact with NCBI's Pathogen Detection project","text":"","code":"# create a two column tibble containing consensus host for each isolate host_info <- extract_consensus_ag_species(meta)  # join back to metadata meta <- meta %>% left_join(host_info)"},{"path":"https://jtrachsel.github.io/pdtools/index.html","id":"extract-earliest-year-from-3-date-columns","dir":"","previous_headings":"Examples","what":"Extract earliest year from 3 date columns","title":"Tools to interact with NCBI's Pathogen Detection project","text":"","code":"earliest_year <- meta %>% extract_earliest_year()  meta <- meta %>% left_join(earliest_year)"},{"path":"https://jtrachsel.github.io/pdtools/index.html","id":"generate-ftp-download-paths-for-a-selection-of-isolates","dir":"","previous_headings":"Examples","what":"Generate ftp download paths for a selection of isolates","title":"Tools to interact with NCBI's Pathogen Detection project","text":"","code":"# download most recent assembly summary download_gbk_assembly_summary('./data/assembly_summary.txt')  # select isolates associated with swine from after 2015 meta_filt <-   meta %>%   filter(Year > 2015 & ag_match == 'Swine') %>%    write_tsv('./data/swine_2015_meta.tsv')   # make a 'download data' tibble to organize and track downloads # downloads both fna and gff files for each genome in the metadata download_data <-    meta_filt %>%    select(asm_acc, ftp_path) %>%    make_ftp_paths(assembly_summary_path = './data/assembly_summary.txt') %>%    make_download_urls('fna') %>%    make_download_urls('gff') %>%    make_dest_paths(type='fna', dest_dir = './data/') %>%    make_dest_paths(type='gff', dest_dir = './data/') %>%    download_genomes('fna') %>%    download_genomes('gff') %>%    write_tsv('./data/download_data.tsv')"},{"path":"https://jtrachsel.github.io/pdtools/index.html","id":"generate-an-input-file-for-caclulating-a-pangenome-with-ppanggolin","dir":"","previous_headings":"Examples","what":"Generate an input file for caclulating a pangenome with ppanggolin","title":"Tools to interact with NCBI's Pathogen Detection project","text":"","code":"# if you have some reference genomes that are complete (circularized) you can  # feed their paths into the 'complete_genome_paths parameter and the function # will correctly specify cirular contigs for ppanggolin.    download_reference_genomes('LT2', 'fna', './reference_genomes/') complete_genomes <- list.files('./reference_genomes/', '.fna', full.names = T)  draft_genomes <- list.files('./data/', '.fna', full.names = T)   build_ppanggolin_file_fastas(complete_genome_paths = complete_genomes,                               incomplete_genome_paths = fna_files) %>%    write_tsv('ppanggolin_file.tsv', col_names = FALSE)"},{"path":"https://jtrachsel.github.io/pdtools/index.html","id":"select-a-representative-set-of-isolates-from-a-pangenome","dir":"","previous_headings":"Examples","what":"Select a representative set of isolates from a pangenome","title":"Tools to interact with NCBI's Pathogen Detection project","text":"","code":"# Read in presence/absence matrix and format correctly: pan_PA <-   read_tsv('./pan/gene_presence_absence.Rtab')  %>%    column_to_rownames(var = 'Gene')  %>%    as.matrix()   # this will return a a small set of genomes that contain at least the proportion of # genes you specify  # this set of genomes will contain 99% of all the genes detected in the pangenome get_pangenome_representatives(pan_mat = pan_PA, SEED = 2, desired_coverage = .99)"},{"path":"https://jtrachsel.github.io/pdtools/index.html","id":"todo","dir":"","previous_headings":"","what":"TODO","title":"Tools to interact with NCBI's Pathogen Detection project","text":"Stats available organisms, num clusters, recent isolate https://www.ncbi.nlm.nih.gov/pathogens/organisms/ take old metadata file new metadata file inputs. return vector new genomes present old list. also return genomes newer assembly accession version extract_consensus_ag_species currently assumes isolates humans epi_type clinical information available. probably wrong cases… Reference README? https://ftp.ncbi.nlm.nih.gov/pathogen/ReadMe.txt think may re-implemented ?","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/build_ppanggolin_file_fastas.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a ppanggolin file from fastas — build_ppanggolin_file_fastas","title":"Build a ppanggolin file from fastas — build_ppanggolin_file_fastas","text":"Build ppanggolin file fastas","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/build_ppanggolin_file_fastas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a ppanggolin file from fastas — build_ppanggolin_file_fastas","text":"","code":"build_ppanggolin_file_fastas(   complete_genome_paths = NULL,   incomplete_genome_paths = NULL )"},{"path":"https://jtrachsel.github.io/pdtools/reference/build_ppanggolin_file_fastas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a ppanggolin file from fastas — build_ppanggolin_file_fastas","text":"complete_genome_paths vector paths complete genome assemblies (contigs circular) incomplete_genome_paths vector paths incomplete genome assemblies (contigs circular)","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/build_ppanggolin_file_fastas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a ppanggolin file from fastas — build_ppanggolin_file_fastas","text":"tibble satisfying ppanggolin file requirements complete genome contigs indicated circular","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/build_ppanggolin_file_fastas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a ppanggolin file from fastas — build_ppanggolin_file_fastas","text":"","code":"#build_ppanggolin_file_fastas(incomplete_genome_paths=c('genome1.fasta', 'genome2.fasta))"},{"path":"https://jtrachsel.github.io/pdtools/reference/calculate_novelty.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate genome 'novelty' from a list of selection sets returned by pick_derep_sets — calculate_novelty","title":"Calculate genome 'novelty' from a list of selection sets returned by pick_derep_sets — calculate_novelty","text":"Calculate genome 'novelty' list selection sets returned pick_derep_sets","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/calculate_novelty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate genome 'novelty' from a list of selection sets returned by pick_derep_sets — calculate_novelty","text":"","code":"calculate_novelty(selection_set_results)"},{"path":"https://jtrachsel.github.io/pdtools/reference/calculate_novelty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate genome 'novelty' from a list of selection sets returned by pick_derep_sets — calculate_novelty","text":"selection_set_results tibble selection sets","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/calculate_novelty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate genome 'novelty' from a list of selection sets returned by pick_derep_sets — calculate_novelty","text":"dataframe novelty scores genomes list 'Novelty' score genome (number selections) / median rank selection","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/calculate_novelty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate genome 'novelty' from a list of selection sets returned by pick_derep_sets — calculate_novelty","text":"","code":"# soon"},{"path":"https://jtrachsel.github.io/pdtools/reference/cluster_genomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster genomes at 4 levels from a pangenome gene PA matrix\nNeeds parallelDist, igraph,\ngenomes as rows and genes as columns? — cluster_genomes","title":"Cluster genomes at 4 levels from a pangenome gene PA matrix\nNeeds parallelDist, igraph,\ngenomes as rows and genes as columns? — cluster_genomes","text":"Cluster genomes 4 levels pangenome gene PA matrix Needs parallelDist, igraph, genomes rows genes columns?","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/cluster_genomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster genomes at 4 levels from a pangenome gene PA matrix\nNeeds parallelDist, igraph,\ngenomes as rows and genes as columns? — cluster_genomes","text":"","code":"cluster_genomes(   dat_mat,   pcut = 0,   scut = 0.5,   tcut = 0.75,   qcut = 0.75,   DIST_METHOD = \"simpson\",   output_directory = NULL,   write_dist = TRUE )"},{"path":"https://jtrachsel.github.io/pdtools/reference/cluster_genomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster genomes at 4 levels from a pangenome gene PA matrix\nNeeds parallelDist, igraph,\ngenomes as rows and genes as columns? — cluster_genomes","text":"dat_mat pan genome presence absence matrix (rows genes) pcut weight graph pruning 1st level scut weight graph pruning 2nd level tcut weight graph pruning 3rd level qcut weight graph pruning 4th level DIST_METHOD distance method building graph (passed parallelDist()) output_directory output directory save graph write_dist logical, dist object written?","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/cluster_genomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster genomes at 4 levels from a pangenome gene PA matrix\nNeeds parallelDist, igraph,\ngenomes as rows and genes as columns? — cluster_genomes","text":"returns tibble cluster designation genome 4 levels","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/cluster_genomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster genomes at 4 levels from a pangenome gene PA matrix\nNeeds parallelDist, igraph,\ngenomes as rows and genes as columns? — cluster_genomes","text":"","code":"# soon"},{"path":"https://jtrachsel.github.io/pdtools/reference/country_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"A named vector of country names — country_vector","title":"A named vector of country names — country_vector","text":"Used help extract country isolation geo_loc_tag column, far US UK special entries.  Taken maps package slightly modified.","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/country_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A named vector of country names — country_vector","text":"","code":"country_vector"},{"path":"https://jtrachsel.github.io/pdtools/reference/country_vector.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A named vector of country names — country_vector","text":"named vector regex patterns (US UK special entries)","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/country_vector.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A named vector of country names — country_vector","text":"maps package","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/download_PDD_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Pathogen Detection metadata for a given organism — download_PDD_metadata","title":"Download Pathogen Detection metadata for a given organism — download_PDD_metadata","text":"Download Pathogen Detection metadata given organism","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/download_PDD_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Pathogen Detection metadata for a given organism — download_PDD_metadata","text":"","code":"download_PDD_metadata(organism, PDG, folder_prefix = NULL)"},{"path":"https://jtrachsel.github.io/pdtools/reference/download_PDD_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Pathogen Detection metadata for a given organism — download_PDD_metadata","text":"organism string ie 'Salmonella' 'Campylobacter' etc PDG Pathogen Detection accession number download folder_prefix string append download path, ie './data/'","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/download_PDD_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Pathogen Detection metadata for a given organism — download_PDD_metadata","text":"returns nothing, probably . initiate download specified files","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/download_PDD_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Pathogen Detection metadata for a given organism — download_PDD_metadata","text":"","code":"#download_PDD_metadata(organism = 'Campylobacter',PDG = 'PDG000000003.1517')"},{"path":"https://jtrachsel.github.io/pdtools/reference/download_SNP_trees.html","id":null,"dir":"Reference","previous_headings":"","what":"Download SNP trees from a dataframe containing SNP_tree_urls and dests — download_SNP_trees","title":"Download SNP trees from a dataframe containing SNP_tree_urls and dests — download_SNP_trees","text":"Download SNP trees dataframe containing SNP_tree_urls dests","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/download_SNP_trees.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download SNP trees from a dataframe containing SNP_tree_urls and dests — download_SNP_trees","text":"","code":"download_SNP_trees(data)"},{"path":"https://jtrachsel.github.io/pdtools/reference/download_SNP_trees.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download SNP trees from a dataframe containing SNP_tree_urls and dests — download_SNP_trees","text":"data dataframe SNP tree URLs dests","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/download_SNP_trees.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download SNP trees from a dataframe containing SNP_tree_urls and dests — download_SNP_trees","text":"input dataframe added column indicating status download","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/download_SNP_trees.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download SNP trees from a dataframe containing SNP_tree_urls and dests — download_SNP_trees","text":"","code":"# soon"},{"path":"https://jtrachsel.github.io/pdtools/reference/download_gbk_assembly_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenience function to download the assembly_summary.txt file from genbank — download_gbk_assembly_summary","title":"Convenience function to download the assembly_summary.txt file from genbank — download_gbk_assembly_summary","text":"Convenience function download assembly_summary.txt file genbank","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/download_gbk_assembly_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenience function to download the assembly_summary.txt file from genbank — download_gbk_assembly_summary","text":"","code":"download_gbk_assembly_summary(destfile, organism = NULL)"},{"path":"https://jtrachsel.github.io/pdtools/reference/download_gbk_assembly_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convenience function to download the assembly_summary.txt file from genbank — download_gbk_assembly_summary","text":"destfile passed download.file()'s destfile, path store downloaded file organism limit gbk assembly summary organism","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/download_gbk_assembly_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convenience function to download the assembly_summary.txt file from genbank — download_gbk_assembly_summary","text":"result download.file","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/download_gbk_assembly_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convenience function to download the assembly_summary.txt file from genbank — download_gbk_assembly_summary","text":"","code":"#not run download_gbk_assembly_summary(destfile='assembly_summary.txt')"},{"path":"https://jtrachsel.github.io/pdtools/reference/download_genomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a set of specified genome files — download_genomes","title":"Download a set of specified genome files — download_genomes","text":"Download set specified genome files","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/download_genomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a set of specified genome files — download_genomes","text":"","code":"download_genomes(data, type, PARALLEL = FALSE)"},{"path":"https://jtrachsel.github.io/pdtools/reference/download_genomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a set of specified genome files — download_genomes","text":"data dataframe make_download_urls make_dest_paths run type one accepted types files download PARALLEL downloads run parallel, requires set future::plan()","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/download_genomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a set of specified genome files — download_genomes","text":"original dataframe columns added represent result download attempt","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/download_genomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download a set of specified genome files — download_genomes","text":"","code":"#"},{"path":"https://jtrachsel.github.io/pdtools/reference/download_most_recent_complete.html","id":null,"dir":"Reference","previous_headings":"","what":"Download the most recent complete metadata for a specified organism — download_most_recent_complete","title":"Download the most recent complete metadata for a specified organism — download_most_recent_complete","text":"Download recent complete metadata specified organism","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/download_most_recent_complete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download the most recent complete metadata for a specified organism — download_most_recent_complete","text":"","code":"download_most_recent_complete(organism, folder_prefix = NULL)"},{"path":"https://jtrachsel.github.io/pdtools/reference/download_most_recent_complete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download the most recent complete metadata for a specified organism — download_most_recent_complete","text":"organism string ie 'Salmonella' 'Campylobacter' etc folder_prefix string append download path, ie './data/'","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/download_most_recent_complete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download the most recent complete metadata for a specified organism — download_most_recent_complete","text":"Returns nothing, probably ","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/download_most_recent_complete.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download the most recent complete metadata for a specified organism — download_most_recent_complete","text":"","code":"#download_most_recent_complete('Salmonella')"},{"path":"https://jtrachsel.github.io/pdtools/reference/download_reference_genomes.html","id":null,"dir":"Reference","previous_headings":"","what":"Download reference genomes — download_reference_genomes","title":"Download reference genomes — download_reference_genomes","text":"Download reference genomes","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/download_reference_genomes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download reference genomes — download_reference_genomes","text":"","code":"download_reference_genomes(genome_names, type, data_dir, avail = FALSE)"},{"path":"https://jtrachsel.github.io/pdtools/reference/download_reference_genomes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download reference genomes — download_reference_genomes","text":"genome_names one LT2, USDA15WA1, FSIS1502916 type fna, gff, etc... data_dir destination directory avail TRUE/FALSE, TRUE, return available genome_name options","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/download_reference_genomes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download reference genomes — download_reference_genomes","text":"tibble download results (vector genome_names avail == TRUE)","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/download_reference_genomes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download reference genomes — download_reference_genomes","text":"","code":"# download_reference_genome('LT2')"},{"path":"https://jtrachsel.github.io/pdtools/reference/extract_collection_agency.html","id":null,"dir":"Reference","previous_headings":"","what":"extract collecting agency from several metadata fields — extract_collection_agency","title":"extract collecting agency from several metadata fields — extract_collection_agency","text":"extract collecting agency several metadata fields","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/extract_collection_agency.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract collecting agency from several metadata fields — extract_collection_agency","text":"","code":"extract_collection_agency(meta, parallel = FALSE)"},{"path":"https://jtrachsel.github.io/pdtools/reference/extract_collection_agency.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract collecting agency from several metadata fields — extract_collection_agency","text":"meta ncbi pathogen detection metadata table parallel boolean, furrr used parallelize? need set future::plan()","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/extract_collection_agency.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract collecting agency from several metadata fields — extract_collection_agency","text":"tibble 2 columns, 1 = target_acc, 2 = collection_agency","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/extract_collection_agency.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"extract collecting agency from several metadata fields — extract_collection_agency","text":"","code":"klebsiella_example_dat %>% extract_collection_agency() #> # A tibble: 4 × 2 #>   target_acc     collection_agency #>   <chr>          <chr>             #> 1 PDT001226986.1 CDC               #> 2 PDT000855242.1 FDA               #> 3 PDT001227052.1 CDC               #> 4 PDT001227044.1 CDC"},{"path":"https://jtrachsel.github.io/pdtools/reference/extract_consensus_ag_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a consensus ag host species from metadata — extract_consensus_ag_species","title":"Extract a consensus ag host species from metadata — extract_consensus_ag_species","text":"Extract consensus ag host species metadata","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/extract_consensus_ag_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a consensus ag host species from metadata — extract_consensus_ag_species","text":"","code":"extract_consensus_ag_species(dat, parallel = FALSE)"},{"path":"https://jtrachsel.github.io/pdtools/reference/extract_consensus_ag_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a consensus ag host species from metadata — extract_consensus_ag_species","text":"dat ncbi pathogen detection metadata table parallel boolean, furrr used parallelize? need set future::plan()","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/extract_consensus_ag_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a consensus ag host species from metadata — extract_consensus_ag_species","text":"returns tibble 2 columns, 1st = target_acc, 2nd = ag_match","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/extract_consensus_ag_species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a consensus ag host species from metadata — extract_consensus_ag_species","text":"","code":"extract_consensus_ag_species(klebsiella_example_dat) #> # A tibble: 200 × 2 #>    target_acc     ag_match #>    <chr>          <chr>    #>  1 PDT000198780.1 Human    #>  2 PDT000768168.1 Human    #>  3 PDT000411409.1 Human    #>  4 PDT001006966.1 Human    #>  5 PDT001226986.1 Human    #>  6 PDT000941692.1 Human    #>  7 PDT001211142.1 Human    #>  8 PDT001009215.1 Human    #>  9 PDT000842832.1 Human    #> 10 PDT000370134.1 Human    #> # … with 190 more rows"},{"path":"https://jtrachsel.github.io/pdtools/reference/extract_country.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract a standardized country name from geo_loc_tag column — extract_country","title":"Extract a standardized country name from geo_loc_tag column — extract_country","text":"Extract standardized country name geo_loc_tag column","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/extract_country.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract a standardized country name from geo_loc_tag column — extract_country","text":"","code":"extract_country(meta, parallel = FALSE)"},{"path":"https://jtrachsel.github.io/pdtools/reference/extract_country.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract a standardized country name from geo_loc_tag column — extract_country","text":"meta PDD metadata table parallel boolean, furrr used parallelize? need set future::plan()","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/extract_country.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract a standardized country name from geo_loc_tag column — extract_country","text":"two column tibble target_acc country columns","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/extract_country.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract a standardized country name from geo_loc_tag column — extract_country","text":"","code":"klebsiella_example_dat %>% extract_country() #> # A tibble: 194 × 2 #>    target_acc     country     #>    <chr>          <chr>       #>  1 PDT000198780.1 Morocco     #>  2 PDT000768168.1 China       #>  3 PDT000411409.1 Switzerland #>  4 PDT001006966.1 Italy       #>  5 PDT001226986.1 China       #>  6 PDT000941692.1 China       #>  7 PDT001211142.1 USA         #>  8 PDT001009215.1 USA         #>  9 PDT000842832.1 China       #> 10 PDT000370134.1 UK          #> # … with 184 more rows"},{"path":"https://jtrachsel.github.io/pdtools/reference/extract_earliest_year.html","id":null,"dir":"Reference","previous_headings":"","what":"return a Year column containing the earliest year from the\navailable 'date' fields. — extract_earliest_year","title":"return a Year column containing the earliest year from the\navailable 'date' fields. — extract_earliest_year","text":"return Year column containing earliest year available 'date' fields.","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/extract_earliest_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"return a Year column containing the earliest year from the\navailable 'date' fields. — extract_earliest_year","text":"","code":"extract_earliest_year(PDD_metadata_table)"},{"path":"https://jtrachsel.github.io/pdtools/reference/extract_earliest_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"return a Year column containing the earliest year from the\navailable 'date' fields. — extract_earliest_year","text":"PDD_metadata_table ncbi pathogen detection metadata table","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/extract_earliest_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"return a Year column containing the earliest year from the\navailable 'date' fields. — extract_earliest_year","text":"returns tibble Year column,","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/extract_earliest_year.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"return a Year column containing the earliest year from the\navailable 'date' fields. — extract_earliest_year","text":"","code":"extract_earliest_year(klebsiella_example_dat) #> Warning: NAs introduced by coercion #> # A tibble: 200 × 2 #>    target_acc      Year #>    <chr>          <dbl> #>  1 PDT000022726.1  2014 #>  2 PDT000063449.1  2012 #>  3 PDT000101154.1  2011 #>  4 PDT000131476.1  2010 #>  5 PDT000131523.1  2003 #>  6 PDT000131558.1  2006 #>  7 PDT000131559.1  2005 #>  8 PDT000131584.1  2008 #>  9 PDT000131590.1  2009 #> 10 PDT000131594.1  2004 #> # … with 190 more rows"},{"path":"https://jtrachsel.github.io/pdtools/reference/extract_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the state name from the geo_loc_name column, this only makes sence for USA isolates — extract_state","title":"Extract the state name from the geo_loc_name column, this only makes sence for USA isolates — extract_state","text":"Extract state name geo_loc_name column, makes sence USA isolates","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/extract_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the state name from the geo_loc_name column, this only makes sence for USA isolates — extract_state","text":"","code":"extract_state(data)"},{"path":"https://jtrachsel.github.io/pdtools/reference/extract_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the state name from the geo_loc_name column, this only makes sence for USA isolates — extract_state","text":"data dataframe containing geo_loc_name column","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/extract_state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the state name from the geo_loc_name column, this only makes sence for USA isolates — extract_state","text":"tibble 2 columns, target_acc State","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/extract_state.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the state name from the geo_loc_name column, this only makes sence for USA isolates — extract_state","text":"","code":"klebsiella_example_dat %>% extract_state() #> # A tibble: 200 × 2 #>    target_acc     State #>    <chr>          <chr> #>  1 PDT000198780.1 \"\"    #>  2 PDT000768168.1 \"\"    #>  3 PDT000411409.1 \"\"    #>  4 PDT001006966.1 \"\"    #>  5 PDT001226986.1 \"\"    #>  6 PDT000941692.1 \"\"    #>  7 PDT001211142.1 \"\"    #>  8 PDT001009215.1 \"\"    #>  9 PDT000842832.1 \"\"    #> 10 PDT000370134.1 \"\"    #> # … with 190 more rows"},{"path":"https://jtrachsel.github.io/pdtools/reference/get_PDG_version.html","id":null,"dir":"Reference","previous_headings":"","what":"get the version of the PDD metadata — get_PDG_version","title":"get the version of the PDD metadata — get_PDG_version","text":"get version PDD metadata","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/get_PDG_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get the version of the PDD metadata — get_PDG_version","text":"","code":"get_PDG_version(data_dir)"},{"path":"https://jtrachsel.github.io/pdtools/reference/get_PDG_version.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get the version of the PDD metadata — get_PDG_version","text":"data_dir directory contains downloaded PDD metadata","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/get_PDG_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get the version of the PDD metadata — get_PDG_version","text":"character vector length 1, PDG accession","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/get_PDG_version.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get the version of the PDD metadata — get_PDG_version","text":"","code":"# get_PDG_version('./data/')"},{"path":"https://jtrachsel.github.io/pdtools/reference/get_pangenome_representatives.html","id":null,"dir":"Reference","previous_headings":"","what":"Select a minimum set of genomes that best represent the gene content of the pangenome — get_pangenome_representatives","title":"Select a minimum set of genomes that best represent the gene content of the pangenome — get_pangenome_representatives","text":"Select minimum set genomes best represent gene content pangenome","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/get_pangenome_representatives.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select a minimum set of genomes that best represent the gene content of the pangenome — get_pangenome_representatives","text":"","code":"get_pangenome_representatives(   pan_mat,   desired_coverage = 0.95,   SEED = 3,   verbose = FALSE )"},{"path":"https://jtrachsel.github.io/pdtools/reference/get_pangenome_representatives.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select a minimum set of genomes that best represent the gene content of the pangenome — get_pangenome_representatives","text":"pan_mat presence absence matrix 1/0, rows genomes, columns genes desired_coverage proportion pangenome's gene content want reduced set contain (.95) SEED random seed use selecting first genome collection. verbose T/F provides updates via print statements","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/get_pangenome_representatives.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select a minimum set of genomes that best represent the gene content of the pangenome — get_pangenome_representatives","text":"returns list length 3. 1:names genomes, 2:scores iteration , 3:proportion coverage iteration","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/get_pangenome_representatives.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select a minimum set of genomes that best represent the gene content of the pangenome — get_pangenome_representatives","text":"","code":"#gen_pangenome_representatives(pan_mat)"},{"path":"https://jtrachsel.github.io/pdtools/reference/get_pangenome_representatives_jaccard.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a subset of a pangenome that tries to represent the gene presence absence diversity\nSelects a random genome,\nthen selects the most distant genome from the selected genome\nthen — get_pangenome_representatives_jaccard","title":"Get a subset of a pangenome that tries to represent the gene presence absence diversity\nSelects a random genome,\nthen selects the most distant genome from the selected genome\nthen — get_pangenome_representatives_jaccard","text":"Get subset pangenome tries represent gene presence absence diversity Selects random genome, selects distant genome selected genome ","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/get_pangenome_representatives_jaccard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a subset of a pangenome that tries to represent the gene presence absence diversity\nSelects a random genome,\nthen selects the most distant genome from the selected genome\nthen — get_pangenome_representatives_jaccard","text":"","code":"get_pangenome_representatives_jaccard(   pan_mat = NULL,   pan_dist = NULL,   SEED = 3,   verbose = FALSE,   CUTOFF = 0.5,   max_genomes = 1000 )"},{"path":"https://jtrachsel.github.io/pdtools/reference/get_pangenome_representatives_jaccard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a subset of a pangenome that tries to represent the gene presence absence diversity\nSelects a random genome,\nthen selects the most distant genome from the selected genome\nthen — get_pangenome_representatives_jaccard","text":"pan_mat gene presence absence matrix pan_dist distance matrix providing PA matrix SEED random seed verbose include print statemetns? CUTOFF stop choosing new genomes distances level max_genomes stop choosing new genomes many genomes chosen","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/get_pangenome_representatives_jaccard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a subset of a pangenome that tries to represent the gene presence absence diversity\nSelects a random genome,\nthen selects the most distant genome from the selected genome\nthen — get_pangenome_representatives_jaccard","text":"returns tibble, 1) asm_acc, 2) min_jacc, 3) order","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/get_pangenome_representatives_jaccard.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a subset of a pangenome that tries to represent the gene presence absence diversity\nSelects a random genome,\nthen selects the most distant genome from the selected genome\nthen — get_pangenome_representatives_jaccard","text":"","code":"# get_pangenome_representatives_jaccard(pan_dist)"},{"path":"https://jtrachsel.github.io/pdtools/reference/klebsiella_example_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"NCBI Pathogen Detection metadata for 200 Klebsiella isolates — klebsiella_example_dat","title":"NCBI Pathogen Detection metadata for 200 Klebsiella isolates — klebsiella_example_dat","text":"example dataset 100 Klebsiella isolates included testing example purposes","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/klebsiella_example_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NCBI Pathogen Detection metadata for 200 Klebsiella isolates — klebsiella_example_dat","text":"","code":"klebsiella_example_dat"},{"path":"https://jtrachsel.github.io/pdtools/reference/klebsiella_example_dat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"NCBI Pathogen Detection metadata for 200 Klebsiella isolates — klebsiella_example_dat","text":"data frame 200 rows 64 variables:","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/klebsiella_example_dat.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"NCBI Pathogen Detection metadata for 200 Klebsiella isolates — klebsiella_example_dat","text":"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1049/AMR/PDG000000012.1049.amr.metadata.tsv","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/list_PDGs.html","id":null,"dir":"Reference","previous_headings":"","what":"List available PDG accessions for an organism — list_PDGs","title":"List available PDG accessions for an organism — list_PDGs","text":"List available PDG accessions organism","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/list_PDGs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List available PDG accessions for an organism — list_PDGs","text":"","code":"list_PDGs(organism)"},{"path":"https://jtrachsel.github.io/pdtools/reference/list_PDGs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List available PDG accessions for an organism — list_PDGs","text":"organism string ie 'Salmonella' 'Campylobacter' etc","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/list_PDGs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List available PDG accessions for an organism — list_PDGs","text":"returns tibble PDG accessions release dates","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/list_PDGs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List available PDG accessions for an organism — list_PDGs","text":"","code":"#list_PDGs('Klebsiella')"},{"path":"https://jtrachsel.github.io/pdtools/reference/list_organisms.html","id":null,"dir":"Reference","previous_headings":"","what":"List organisms available in the Pathogens database — list_organisms","title":"List organisms available in the Pathogens database — list_organisms","text":"List organisms available Pathogens database","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/list_organisms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List organisms available in the Pathogens database — list_organisms","text":"","code":"list_organisms()"},{"path":"https://jtrachsel.github.io/pdtools/reference/list_organisms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List organisms available in the Pathogens database — list_organisms","text":"tibble available organisms","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/list_organisms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List organisms available in the Pathogens database — list_organisms","text":"","code":"list_organisms() #> # A tibble: 50 × 2 #>    organism                 release_date        #>    <chr>                    <dttm>              #>  1 Aeromonas                2022-06-16 00:06:00 #>  2 Aeromonas_salmonicida    2022-05-31 00:02:00 #>  3 Aeromonas_sobria         2022-04-06 12:28:00 #>  4 Aeromonas_veronii        2022-05-26 00:03:00 #>  5 Bacillus_cereus_group    2022-06-16 00:07:00 #>  6 Campylobacter            2022-06-16 00:22:00 #>  7 Candida_auris            2022-06-15 03:32:00 #>  8 Citrobacter_freundii     2022-06-16 00:23:00 #>  9 Clostridioides_difficile 2022-06-16 00:24:00 #> 10 Clostridium_botulinum    2022-05-14 00:01:00 #> # … with 40 more rows"},{"path":"https://jtrachsel.github.io/pdtools/reference/make_SNP_tree_dest.html","id":null,"dir":"Reference","previous_headings":"","what":"Make SNP tree download destination paths — make_SNP_tree_dest","title":"Make SNP tree download destination paths — make_SNP_tree_dest","text":"Make SNP tree download destination paths","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/make_SNP_tree_dest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make SNP tree download destination paths — make_SNP_tree_dest","text":"","code":"make_SNP_tree_dest(data, data_dir)"},{"path":"https://jtrachsel.github.io/pdtools/reference/make_SNP_tree_dest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make SNP tree download destination paths — make_SNP_tree_dest","text":"data dataframe containing download paths desired SNP trees data_dir path directory store downloaded trees ","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/make_SNP_tree_dest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make SNP tree download destination paths — make_SNP_tree_dest","text":"input dataframe added column containing SNP_tree_dest column","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/make_SNP_tree_dest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make SNP tree download destination paths — make_SNP_tree_dest","text":"","code":"# soon"},{"path":"https://jtrachsel.github.io/pdtools/reference/make_SNPtree_urls.html","id":null,"dir":"Reference","previous_headings":"","what":"generate ftp site download urls for all SNP trees containing the provided isolates — make_SNPtree_urls","title":"generate ftp site download urls for all SNP trees containing the provided isolates — make_SNPtree_urls","text":"generate ftp site download urls SNP trees containing provided isolates","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/make_SNPtree_urls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate ftp site download urls for all SNP trees containing the provided isolates — make_SNPtree_urls","text":"","code":"make_SNPtree_urls(organism, data, PDG)"},{"path":"https://jtrachsel.github.io/pdtools/reference/make_SNPtree_urls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate ftp site download urls for all SNP trees containing the provided isolates — make_SNPtree_urls","text":"organism string ie 'Salmonella' 'Campylobacter' etc data metadata table, must contain column 'PDS_acc' merging SNP cluster data PDG PDG version metadata .","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/make_SNPtree_urls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate ftp site download urls for all SNP trees containing the provided isolates — make_SNPtree_urls","text":"returns vector ftp download urls tar.gz file containing SNP tree info","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/make_SNPtree_urls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generate ftp site download urls for all SNP trees containing the provided isolates — make_SNPtree_urls","text":"","code":"make_SNPtree_urls(organism = 'Klebsiella',  data = klebsiella_example_dat, PDG = 'PDG000000012.1053') #> 86 Isolates in the collection are not represented in SNP trees #>  [1] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000012469.1.tar.gz\"   #>  [2] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000048063.68.tar.gz\"  #>  [3] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000098771.3.tar.gz\"   #>  [4] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000103219.1.tar.gz\"   #>  [5] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000052089.14.tar.gz\"  #>  [6] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000072037.3.tar.gz\"   #>  [7] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000095581.1.tar.gz\"   #>  [8] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000074971.1.tar.gz\"   #>  [9] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000012621.3.tar.gz\"   #> [10] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000095229.11.tar.gz\"  #> [11] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000103191.1.tar.gz\"   #> [12] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000052366.23.tar.gz\"  #> [13] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000038612.1.tar.gz\"   #> [14] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000103213.1.tar.gz\"   #> [15] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000096677.2.tar.gz\"   #> [16] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000036296.3.tar.gz\"   #> [17] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000036263.5.tar.gz\"   #> [18] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000085573.4.tar.gz\"   #> [19] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000095239.2.tar.gz\"   #> [20] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000052185.1.tar.gz\"   #> [21] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000045319.1.tar.gz\"   #> [22] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000012628.23.tar.gz\"  #> [23] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000012112.56.tar.gz\"  #> [24] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000077015.12.tar.gz\"  #> [25] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000015418.30.tar.gz\"  #> [26] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000045299.5.tar.gz\"   #> [27] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000012124.1.tar.gz\"   #> [28] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000015678.108.tar.gz\" #> [29] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000070361.1.tar.gz\"   #> [30] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000102667.2.tar.gz\"   #> [31] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000060185.1.tar.gz\"   #> [32] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000040466.3.tar.gz\"   #> [33] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000045368.1.tar.gz\"   #> [34] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000045297.24.tar.gz\"  #> [35] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000045394.20.tar.gz\"  #> [36] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000041859.6.tar.gz\"   #> [37] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000045360.10.tar.gz\"  #> [38] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000084730.1.tar.gz\"   #> [39] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000012626.6.tar.gz\"   #> [40] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000058604.5.tar.gz\"   #> [41] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000096689.1.tar.gz\"   #> [42] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000006578.57.tar.gz\"  #> [43] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000055633.9.tar.gz\"   #> [44] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000040472.2.tar.gz\"   #> [45] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000045443.1.tar.gz\"   #> [46] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000054005.3.tar.gz\"   #> [47] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000036176.1.tar.gz\"   #> [48] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000019488.9.tar.gz\"   #> [49] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000046936.3.tar.gz\"   #> [50] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000094136.1.tar.gz\"   #> [51] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000079862.7.tar.gz\"   #> [52] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000005616.2.tar.gz\"   #> [53] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000045272.11.tar.gz\"  #> [54] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000101843.1.tar.gz\"   #> [55] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000085669.1.tar.gz\"   #> [56] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000048069.3.tar.gz\"   #> [57] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000038608.2.tar.gz\"   #> [58] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000065414.2.tar.gz\"   #> [59] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000045352.23.tar.gz\"  #> [60] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000038923.3.tar.gz\"   #> [61] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000078629.4.tar.gz\"   #> [62] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000075041.5.tar.gz\"   #> [63] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000066129.3.tar.gz\"   #> [64] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000101833.1.tar.gz\"   #> [65] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000045410.6.tar.gz\"   #> [66] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000050839.3.tar.gz\"   #> [67] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000050841.5.tar.gz\"   #> [68] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000036246.5.tar.gz\"   #> [69] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000036336.23.tar.gz\"  #> [70] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000103169.1.tar.gz\"   #> [71] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000053034.5.tar.gz\"   #> [72] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000103224.1.tar.gz\"   #> [73] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000045421.15.tar.gz\"  #> [74] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000018683.4.tar.gz\"   #> [75] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000084736.1.tar.gz\"   #> [76] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000075219.3.tar.gz\"   #> [77] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000045135.6.tar.gz\"   #> [78] \"https://ftp.ncbi.nlm.nih.gov/pathogen/Results/Klebsiella/PDG000000012.1053/SNP_trees/PDS000045371.1.tar.gz\""},{"path":"https://jtrachsel.github.io/pdtools/reference/make_dest_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Make download destination paths — make_dest_paths","title":"Make download destination paths — make_dest_paths","text":"Make download destination paths","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/make_dest_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make download destination paths — make_dest_paths","text":"","code":"make_dest_paths(data, type, dest_dir)"},{"path":"https://jtrachsel.github.io/pdtools/reference/make_dest_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make download destination paths — make_dest_paths","text":"data dataframe containing asm_acc column type type files want download, one : 'fna', 'gbff', 'gff', 'gtf', 'faa', 'cds' dest_dir path directory want use, must exist, include trailing '/'","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/make_dest_paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make download destination paths — make_dest_paths","text":"returns dataframe added \"type_dest\" column containing paths pass download.file","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/make_dest_paths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make download destination paths — make_dest_paths","text":"","code":"# download_data %>% make_dest_faths(type='fna', dest_dir='./data/')"},{"path":"https://jtrachsel.github.io/pdtools/reference/make_download_urls.html","id":null,"dir":"Reference","previous_headings":"","what":"make specific ftp download paths for a dataframe with ftp_paths and assembly accessions — make_download_urls","title":"make specific ftp download paths for a dataframe with ftp_paths and assembly accessions — make_download_urls","text":"make specific ftp download paths dataframe ftp_paths assembly accessions","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/make_download_urls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"make specific ftp download paths for a dataframe with ftp_paths and assembly accessions — make_download_urls","text":"","code":"make_download_urls(data, type)"},{"path":"https://jtrachsel.github.io/pdtools/reference/make_download_urls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"make specific ftp download paths for a dataframe with ftp_paths and assembly accessions — make_download_urls","text":"data dataframe columns 'ftp_path' 'asm_acc' ftp_path column produced function make_ftp_paths() type type download path generate, one : 'fna', 'gbff', 'gff', 'gtf', 'faa', 'cds'","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/make_download_urls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"make specific ftp download paths for a dataframe with ftp_paths and assembly accessions — make_download_urls","text":"returns original dataframe added column, named \"type_download\"","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/make_download_urls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"make specific ftp download paths for a dataframe with ftp_paths and assembly accessions — make_download_urls","text":"","code":"make_download_urls(klebsiella_example_dat, type='fna') #> <error: some of the ftp_paths are invalid, must match \"https://ftp.ncbi.nlm.nih.gov/genomes/all/\" >"},{"path":"https://jtrachsel.github.io/pdtools/reference/make_ftp_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"generate ftp site paths for a selection of assembly accessions — make_ftp_paths","title":"generate ftp site paths for a selection of assembly accessions — make_ftp_paths","text":"generate ftp site paths selection assembly accessions","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/make_ftp_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate ftp site paths for a selection of assembly accessions — make_ftp_paths","text":"","code":"make_ftp_paths(data, assembly_summary_path)"},{"path":"https://jtrachsel.github.io/pdtools/reference/make_ftp_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate ftp site paths for a selection of assembly accessions — make_ftp_paths","text":"data dataframe containing asm_acc assembly_summary_path path genbank assembly_summary.txt, see download_gbk_assembly_summary()","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/make_ftp_paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate ftp site paths for a selection of assembly accessions — make_ftp_paths","text":"two column tibble 1= asm_acc ; 2= ftp_path","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/make_ftp_paths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generate ftp site paths for a selection of assembly accessions — make_ftp_paths","text":"","code":"#make_ftp_paths(klebsiella_example_data './test/assembly_summary.txt')"},{"path":"https://jtrachsel.github.io/pdtools/reference/mark_outliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark outliers from a distance matrix — mark_outliers","title":"Mark outliers from a distance matrix — mark_outliers","text":"Mark outliers distance matrix","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/mark_outliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark outliers from a distance matrix — mark_outliers","text":"","code":"mark_outliers(DIST, outlier_prob = 0.99)"},{"path":"https://jtrachsel.github.io/pdtools/reference/mark_outliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark outliers from a distance matrix — mark_outliers","text":"DIST dist object outlier_prob probability consider entity outlier","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/mark_outliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mark outliers from a distance matrix — mark_outliers","text":"tibble outlier designation genome","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/mark_outliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mark outliers from a distance matrix — mark_outliers","text":"","code":"# soon"},{"path":"https://jtrachsel.github.io/pdtools/reference/pick_derep_sets.html","id":null,"dir":"Reference","previous_headings":"","what":"Pick multiple de-replication sets from a pangenome — pick_derep_sets","title":"Pick multiple de-replication sets from a pangenome — pick_derep_sets","text":"Pick multiple de-replication sets pangenome","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/pick_derep_sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pick multiple de-replication sets from a pangenome — pick_derep_sets","text":"","code":"pick_derep_sets(pan_PA, output_file, num_sets = 25, desired_coverage = 0.95)"},{"path":"https://jtrachsel.github.io/pdtools/reference/pick_derep_sets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pick multiple de-replication sets from a pangenome — pick_derep_sets","text":"pan_PA pangenome gene presence/absence matrix, genomes columns, genes rows output_file path save resulting R object (RDS format) num_sets number sets select (25) desired_coverage proportion genes pangenome cover (.99)","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/pick_derep_sets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pick multiple de-replication sets from a pangenome — pick_derep_sets","text":"tibble two columns: random seeds used, list column containing dereplication sets","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/pick_derep_sets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pick multiple de-replication sets from a pangenome — pick_derep_sets","text":"","code":"# soon"},{"path":"https://jtrachsel.github.io/pdtools/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://jtrachsel.github.io/pdtools/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/remove_strict_core.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes genes present in all genomes from pangenome presence/absence matrix — remove_strict_core","title":"Removes genes present in all genomes from pangenome presence/absence matrix — remove_strict_core","text":"Removes genes present genomes pangenome presence/absence matrix","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/remove_strict_core.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes genes present in all genomes from pangenome presence/absence matrix — remove_strict_core","text":"","code":"remove_strict_core(pan_PA, rows_are_genes = NULL)"},{"path":"https://jtrachsel.github.io/pdtools/reference/remove_strict_core.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes genes present in all genomes from pangenome presence/absence matrix — remove_strict_core","text":"pan_PA pangenome presence absence matrix rows_are_genes logical indicating genes rows matrix","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/remove_strict_core.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes genes present in all genomes from pangenome presence/absence matrix — remove_strict_core","text":"returns pangenome presence/absence matrix strict core removed","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/remove_strict_core.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Removes genes present in all genomes from pangenome presence/absence matrix — remove_strict_core","text":"","code":"#generate_pangenome() %>% remove_strict_core()"},{"path":"https://jtrachsel.github.io/pdtools/reference/res_plot_dat.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a dataframe for plotting the progress of selecting a set of genomes — res_plot_dat","title":"Generate a dataframe for plotting the progress of selecting a set of genomes — res_plot_dat","text":"Generate dataframe plotting progress selecting set genomes","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/res_plot_dat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a dataframe for plotting the progress of selecting a set of genomes — res_plot_dat","text":"","code":"res_plot_dat(result, seed_num)"},{"path":"https://jtrachsel.github.io/pdtools/reference/res_plot_dat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a dataframe for plotting the progress of selecting a set of genomes — res_plot_dat","text":"result TODO seed_num TODO","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/res_plot_dat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a dataframe for plotting the progress of selecting a set of genomes — res_plot_dat","text":"returns tibble containing score set additional genome","code":""},{"path":"https://jtrachsel.github.io/pdtools/reference/res_plot_dat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a dataframe for plotting the progress of selecting a set of genomes — res_plot_dat","text":"","code":"# res_plot_dat()"}]
